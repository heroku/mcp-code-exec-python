name: MCP Tests

on:
  pull_request:

jobs:
  ###########################################################################
  # 1 - Local integration tests (always run)
  ###########################################################################
  local:
    runs-on: ubuntu-latest
    env:
      API_KEY: ci-test-key

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run pytest (local transports)
        run: pytest -q

  ###########################################################################
  # 2 - Remote smoke-test (skipped if ENV variables are missing)
  ###########################################################################
  remote:
    runs-on: ubuntu-latest
    env:
      MCP_SERVER_URL: ${{ secrets.MCP_SERVER_URL }}
      API_KEY: ${{ secrets.API_KEY }}
      SHOULD_RUN_REMOTE: ${{ secrets.MCP_SERVER_URL != '' && secrets.API_KEY != '' }}

    steps:
      - name: Skip if secrets are missing
        if: env.SHOULD_RUN_REMOTE != 'true'
        run: echo "Skipping remote tests due to missing secrets."

      - uses: actions/checkout@v4
        if: env.SHOULD_RUN_REMOTE == 'true'

      - uses: actions/setup-python@v5
        if: env.SHOULD_RUN_REMOTE == 'true'
        with:
          python-version: "3.11"

      - uses: actions/cache@v4
        if: env.SHOULD_RUN_REMOTE == 'true'
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      - name: Install dependencies
        if: env.SHOULD_RUN_REMOTE == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest (remote smoke)
        if: env.SHOULD_RUN_REMOTE == 'true'
        run: pytest -q
