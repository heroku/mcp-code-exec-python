name: MCP Tests

on:
  push:
    branches:
  pull_request:

jobs:
  ###########################################################################
  # 1 - Local integration tests (always run)
  ###########################################################################
  local:
    runs-on: ubuntu-latest

    # Dummy key lets the clients authenticate against the local servers.
    env:
      API_KEY: ci-test-key

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Optional: cache wheels to speed up numpy / scipy installs
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run pytest (local transports)
        run: pytest -q


  ###########################################################################
  # 2 - Remote smoke-test (only when secrets are set)
  #
  #    • Put MCP_SERVER_URL  → “https://<app>.herokuapp.com”
  #    • Put API_KEY         → same key you set as Heroku config var
  #
  #    The fixture auto-skips the remote case if these are missing, so
  #    the job is conditionally *created* only when both secrets exist.
  ###########################################################################
  remote:
    if: ${{ secrets.MCP_SERVER_URL != '' && secrets.API_KEY != '' }}
    runs-on: ubuntu-latest

    env:
      MCP_SERVER_URL: ${{ secrets.MCP_SERVER_URL }}
      API_KEY:       ${{ secrets.API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # We reuse the *same* test-suite; the fixture detects MCP_SERVER_URL
      # and adds the “remote” parameter automatically.
      - name: Run pytest (remote smoke)
        run: pytest -q
